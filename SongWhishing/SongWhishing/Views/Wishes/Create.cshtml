@model SongWishing.Request


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
      .ui-autocomplete {
    max-height: 100px;
    overflow-y: auto;
    /* prevent horizontal scrollbar */
    overflow-x: hidden;
  }
</style>
<script type="text/javascript">

    //var Artist = {

    //}


    //$function ViewModel(){
    //    var self = this;
    //     self.users =
    //}

    $(function () {

        //return {
        //    label: element.Artist,
        //    value: element.Song,
        //    //This we still have acces to the original object
        //    object:element
        //}
        function log(message) {
            $("<div/>").text(message).prependTo("#log");
            $("#log").attr("scrollTop", 0);
        }


        var autocompleteUrl = '@Url.Action("getAjaxResult")';

        $("#term").autocomplete({
            minLength: 0,
            autoFocus: false,
            delay: 5,
            source: function (request, response) {
                $.ajax({
                    url: autocompleteUrl,
                    dataType: "json",
                    type: 'POST',
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        var array = data.error ? [] : $.map(data.slice(0,50), function (item) {
                            return {
                              //Here we got two values in the dropdown
                                label: item.Artist + ": " + item.Song,
                                artist: item.Artist,
                                value: item.Song
                            };
                        });
                        response(array);
                    }
                });
            },
            focus: function (event, ui) {
             // prevent autocomplete from updating the textbox
                event.preventDefault();

                $("#term").val(ui.item.label)
                return false;
            },
            select: function (event, ui) {
              //prevent autocomplete from updating the textbox
                event.preventDefault();

                $("#artistname").val(ui.item.artist)
                $("#songname").val(ui.item.value)

                return false;
            }
        })
    });

</script>

<h2>Create</h2>

<h4>Önskningar</h4>
<hr />




    @using (Html.BeginForm(FormMethod.Post))
    {
        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="search-horizontal">
            <div class="form-group">
                @Html.Label(" Sök efter Artist eller låt:", new { @class = "control-label col-md-2" })
                <div class="col-md-10 search-group">
                    @Html.TextBox("term", null, new { @class = "form-control" })
                </div>
            </div>
            </div>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Artist, new { id = "artistname", @class = "form-control artist-group" })
                        @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Låt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Låt, new { id = "songname", @class = "form-control song-group" })
                        @Html.ValidationMessageFor(model => model.Låt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Avsändare, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Avsändare, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Avsändare, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Önska" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
